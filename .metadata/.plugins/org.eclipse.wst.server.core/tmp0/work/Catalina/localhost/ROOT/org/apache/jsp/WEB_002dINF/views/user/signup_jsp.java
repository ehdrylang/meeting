/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.43
 * Generated at: 2017-06-05 11:45:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.10.2.js\"></script> \r\n");
      out.write("<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/js/bootstrap.min.js\"></script>\r\n");
      out.write(" <!-- 스프링 시큐리티 ajax csrf설정 403에러  -->\r\n");
      out.write("<meta name=\"_csrf\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("<!-- default header name is X-CSRF-TOKEN -->\r\n");
      out.write("<meta name=\"_csrf_header\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("<!-- 스프링 시큐리티 ajax csrf설정 403에러  -->\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("    \t<div class=\"col-sm-3\">\r\n");
      out.write("    \t</div>\r\n");
      out.write("        <div class=\"col-sm-6\">\r\n");
      out.write("            <div class=\"panel panel-default\">\r\n");
      out.write("                <div class=\"panel-body\">\r\n");
      out.write("                    <h5 class=\"text-center\">- 회원가입 -</h5>\r\n");
      out.write("                    <form action=\"/user/signup\" role=\"form\" method=\"post\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-envelope\"></span>\r\n");
      out.write("                            </span>\r\n");
      out.write("                            <input style=\"width:50%\" type=\"text\" id=\"username\" class=\"form-control\" name=\"username\" placeholder=\"이메일 (ID)\" required />\r\n");
      out.write("                            <label style=\"width:50%\" class=\"form-control\">@hansung.ac.kr</label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div>\r\n");
      out.write("                    \t<label id=\"checkUid\" class=\"checkLabel\">필수 정보입니다.</label>\r\n");
      out.write("   \t\t\t\t\t\t<label id=\"checkUid1\" class=\"checkLabel\">아이디 중복</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-user\"></span></span>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"displayname\" placeholder=\"닉네임\" required />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-lock\"></span></span>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"비밀번호\" required />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-lock\"></span></span>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" name=\"password2\" placeholder=\"비밀번호 (확인)\" required />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-star\"></span></span>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"kakaoid\" placeholder=\"카카오톡 아이디\" required  />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-ok-circle\"></span></span>\r\n");
      out.write("                            <input style=\"width:50%\" type=\"text\" id=\"hansungAuth\" class=\"form-control\" placeholder=\"인증번호\" required />\r\n");
      out.write("                            <input style=\"width:50%\" type=\"button\" id=\"emailBtn\" class=\"btn btn-default\" value=\"인증번호받기\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div>\r\n");
      out.write("                    \t<input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div>\r\n");
      out.write("                    \t<input style=\"width:100%\" type=\"submit\" id=\"submit\" class=\"btn btn-default\" value=\"가입하기\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                 \t</form>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div class=\"col-sm-3\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\tvar emailAuth = null;\r\n");
      out.write("\t/* 스프링 시큐리티 ajax csrf설정 403에러 */\r\n");
      out.write("\t$(function () {\r\n");
      out.write("\t\tvar token = $(\"meta[name='_csrf']\").attr(\"content\");\r\n");
      out.write("\t\tvar header = $(\"meta[name='_csrf_header']\").attr(\"content\");\r\n");
      out.write("\t\t$(document).ajaxSend(function(e, xhr, options) {\r\n");
      out.write("\t\t\txhr.setRequestHeader(header, token);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t/* 스프링 시큐리티 ajax csrf설정 403에러 */\r\n");
      out.write("\t\r\n");
      out.write("    $(\"#emailBtn\").click(function(){\r\n");
      out.write("    \t $.ajax({ //image 파일 폴더에 생성\r\n");
      out.write("             type : \"post\",\r\n");
      out.write("             url : \"/sendMail/auth\",\r\n");
      out.write("             dataType : \"text\",\r\n");
      out.write("             processData : false,\r\n");
      out.write("             contentType : false,\r\n");
      out.write("             success : function(result) {\r\n");
      out.write("            \t emailAuth=result;\r\n");
      out.write("             }\r\n");
      out.write("          });\r\n");
      out.write("   });\r\n");
      out.write("    $(\"#submit\").click(function(event){\r\n");
      out.write("   \t \tif($(\"#hansungAuth\").val()===emailAuth){\r\n");
      out.write("\t       \t\tconsole.log(\"success\");\r\n");
      out.write("\t       \t\t$(\"form\").submit();\r\n");
      out.write("        \t}\r\n");
      out.write("       \telse{\r\n");
      out.write("       \t\talert('이메일 인증 실패');\r\n");
      out.write("       \t}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $(\".checkLabel\").hide();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    $('#username').blur(function(){\r\n");
      out.write("      IdCheck();\r\n");
      out.write("   }); \r\n");
      out.write("    function IdCheck(){\r\n");
      out.write("   \t   $.ajax({\r\n");
      out.write("   \t      type : \"post\",\r\n");
      out.write("   \t      url : \"/user/signUpIdCheck\",\r\n");
      out.write("   \t      dataType : \"text\",\r\n");
      out.write("   \t      data :{\r\n");
      out.write("   \t         username : $(\"#username\").val()\r\n");
      out.write("   \t      },\r\n");
      out.write("   \t      success : function(result) {\r\n");
      out.write("   \t         if(result == \"SUCCESS\"){\r\n");
      out.write("   \t         \tconsole.log(\"아이디 사용가능.\");\r\n");
      out.write("   \t         }\r\n");
      out.write("   \t         else{\r\n");
      out.write("   \t          \tconsole.log(\"아이디 중복\");\r\n");
      out.write("   \t         }\r\n");
      out.write("   \t      }\r\n");
      out.write("   \t   });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("   \tfunction buttonStop() {\r\n");
      out.write("   \t   $(\"#submit\").attr(\"disabled\",true);\r\n");
      out.write("   \t}\r\n");
      out.write("   \tfunction buttonStart(){\r\n");
      out.write("   \t   $(\"#submit\").attr(\"disabled\",false);\r\n");
      out.write("   \t}\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
