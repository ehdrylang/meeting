/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.43
 * Generated at: 2017-08-03 11:44:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class read_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/meeting/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/meeting/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1496552151886L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("\t<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css\">\n");
      out.write("\t<script src=\"http://code.jquery.com/jquery-1.10.2.js\"></script> \n");
      out.write("\t<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/js/bootstrap.min.js\"></script>\n");
      out.write("\t<!-- 스프링 시큐리티 ajax csrf설정 403에러  -->\n");
      out.write("\t<meta name=\"_csrf\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\t<!-- default header name is X-CSRF-TOKEN -->\n");
      out.write("\t<meta name=\"_csrf_header\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\t<!-- 스프링 시큐리티 ajax csrf설정 403에러  -->\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("body {\n");
      out.write("/* \tbackground-color: #fafafa; */\n");
      out.write("    box-shadow : rgba(0,0,0,0.5) 0 0 0 9999px;\n");
      out.write("\tbackground: #f4f5f7;\n");
      out.write("\tline-height: 20px;\n");
      out.write("}\n");
      out.write(".glyphicon glyphicon-heart {\n");
      out.write("\tbackground: white;\n");
      out.write("\tcolor: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("hr {\n");
      out.write("\tborder: 1px solid #d4d6d8;\n");
      out.write("}\n");
      out.write(".boardBox {\n");
      out.write("  display: -webkit-flex;\n");
      out.write("  display: flex;\n");
      out.write("  -webkit-flex-flow: row wrap;\n");
      out.write("  flex-flow: row wrap;\n");
      out.write("  position: relative;\n");
      out.write("  margin: auto;\n");
      out.write("  border: 1px solid #dee0e2;\n");
      out.write("  width: 100%;\n");
      out.write("  background-color: white;\n");
      out.write(" /*  overflow: hidden; */\n");
      out.write("}\n");
      out.write(".c1 {\n");
      out.write("\theight: 10%;\n");
      out.write("\tborder-bottom: 1px solid #dee0e2;\n");
      out.write("}\n");
      out.write(".c2 {\n");
      out.write("\t/* min-height: 400px; */\n");
      out.write("/* \theight: 40%; */\n");
      out.write("\tborder-bottom: 1px solid #fafafa;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".c3 {\n");
      out.write("\theight: 10%;\n");
      out.write("\tborder-bottom: 1px solid #fafafa;\n");
      out.write("}\n");
      out.write(".c4{\n");
      out.write("/* \t\n");
      out.write("\theight: 30%;\n");
      out.write("\tborder-bottom: 1px solid #fafafa; */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".c5{\n");
      out.write("\theight: 10%;\n");
      out.write("\tborder-bottom: 1px solid #fafafa;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".c1, .c2, .c3, .c4, .c5 {\n");
      out.write("  width: 100%;\n");
      out.write("/*   border: 1px solid gray; */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".c1, .c3, .c4, .c5 {\n");
      out.write("\tpadding: 0px 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media (min-width: 600px) {\n");
      out.write("\t.boardBox {\n");
      out.write("\t  max-width: 1000px;\n");
      out.write("\t  height: 800px;\n");
      out.write("\t}\n");
      out.write("  .c2 {\n");
      out.write("  \t  order: 2;\n");
      out.write("\t  position: absolute;\n");
      out.write("\t  float: left;\n");
      out.write("\t  width: 60%;\n");
      out.write("\t  height: 100%;\n");
      out.write("\t  text-align: center;\n");
      out.write("\t\n");
      out.write("\t  border-right: 1px solid #fafafa;\n");
      out.write("  }\t\n");
      out.write("  .c1 {\n");
      out.write("  \torder: 1;\n");
      out.write("  \theight: 15%;\n");
      out.write("  \tmargin-left : 60%;\n");
      out.write("  \twidth: 40%;\n");
      out.write("  \tpadding: 0px 10px;\n");
      out.write("  \tborder-bottom: 1px solid #fafafa;\n");
      out.write("  }\n");
      out.write("  .c3{\n");
      out.write(" \tposition: relative;\n");
      out.write("  \torder: 4;\n");
      out.write("  \theight: 15%;\n");
      out.write("  \tmargin-left : 60%;\n");
      out.write(" \twidth: 40%;\n");
      out.write(" \tborder-bottom: 1px solid #fafafa;\n");
      out.write(" \tpadding: 0px 10px;\n");
      out.write("  }\n");
      out.write("  .c5{\n");
      out.write("  \torder: 5;\n");
      out.write("  \theight: 10%;\n");
      out.write("  \tmargin-left : 60%;\n");
      out.write(" \twidth: 40%;\n");
      out.write("\tpadding: 0px 10px;\n");
      out.write("  }\n");
      out.write("  .c4 {\n");
      out.write("  \torder: 3;\n");
      out.write("    height: 60%;\n");
      out.write("  /* \tposition: absolute; */\n");
      out.write(" \tmargin-left : 60%;\n");
      out.write(" \twidth: 40%;\n");
      out.write(" \toverflow:scroll; \n");
      out.write(" \tborder-bottom: 1px solid #fafafa;\n");
      out.write(" \toverflow-x:hidden;\n");
      out.write("    padding: 0px 30px; \n");
      out.write("  }\n");
      out.write("\n");
      out.write("}\n");
      out.write(".replyTextArea {\n");
      out.write("\tbackground: 0 0;\n");
      out.write("    border: none;\n");
      out.write("    color: #262626;\n");
      out.write("    font-size: inherit;\n");
      out.write("    outline: none;\n");
      out.write("    padding: 0;\n");
      out.write("    resize: none; \n");
      out.write("    max-height: 60px;\n");
      out.write("/*     max-height: 200px; */\n");
      out.write("}\n");
      out.write("\t\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  \t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/header.jsp", out, false);
      out.write(" \n");
      out.write("  \t<br>\n");
      out.write("  \t<br>\n");
      out.write("  \t<br>\n");
      out.write("  \t<br>\n");
      out.write("  \t<br>\n");
      out.write("  \t<div class=\"boardBox\">\n");
      out.write("\t\t\t<div class=\"c1\" > <!-- 유저이름,타이틀 div -->\n");
      out.write("\t\t\t\t<br>\n");
      out.write("\t\t\t\t<div><img src=\"/displayFile?fileName=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.profileimage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"img-circle\" width=\"40px\" height=\"40px\"> <label>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.displayname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label> </div>\n");
      out.write("\t\t\t\t<div><label>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label></div>\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t<!-- 게시판 주인과 로그인 유저의 아이디가 같을시 수정,삭제 버튼 활성화 -->\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t<div class=\"c2\">\n");
      out.write("\t\t\t    <img src=\"/displayFile?fileName=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.photo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"width: 100%; height: 100%; vertical-align: middle\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"c3\">\n");
      out.write("\t\t\t<a href=\"#\" id=\"heartCancle\" style=\"display: none; color:red\"><span class=\"glyphicon glyphicon-heart\" style=\"font-size: 50px; \"></span></a>\n");
      out.write("\t\t\t<a href=\"#\" id=\"heartClick\" style=\"display: block; color: red\"><span class=\"glyphicon glyphicon-heart-empty\" style=\"font-size:50px;\"></span></a>\n");
      out.write("\t\t\t<br><label>좋아요</label>\n");
      out.write("\t\t\t<label id=\"heartCnt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.heartcnt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label> <label>개</label> <br>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"c4\" >\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<label>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"contentVal\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <span id=\"content\"></span> <br>\n");
      out.write("\t\t\t\t<br>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<label> 댓글  </label>\n");
      out.write("\t\t\t\t\t\t<!-- 댓글영역 -->\n");
      out.write("\t\t\t\t<div id='replyArea' class=\"row\">\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t<div id='replyShow'>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t글쓴이 내용 기능\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t<!-- 현재 이 글에 있는 댓글들을 추가할 div-->\n");
      out.write("\t\t\t\t\t\t<div id='replyAttacher'>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t<!-- 실제 reply들을 포함. (안쪽 행 하나하나는 div id='replyXXX') : 등록 후 HttpStatus.OK 를 받으면 Attach -->\n");
      out.write("\t\t\t\t\t\t\t<div id='repliesArea'></div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"c5\">\n");
      out.write("<!-- \t\t\t<input id=\"inputReply\" type=\"text\" />  -->\n");
      out.write("\t\t\t<textarea id=\"replyInput\" class=\"replyTextArea\" style=\"height: 20px\" rows=\"2\" cols=\"40\" placeholder=\"댓글달기...\"></textarea>\n");
      out.write("\t\t\t<input id=\"replySend\"type=\"button\" value=\"등록\"/>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<form action=\"\" method=\"post\">\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"boardno\" id=\"boardno\"\n");
      out.write("\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.boardno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input type=\"hidden\"\n");
      out.write("\t\t\t\tname=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\t\t</form>\n");
      out.write("\t\t<input type=\"hidden\" id=\"username\"\n");
      out.write("\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.userPrincipal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("\t\t<!-- 현재 로그인 유저 아이디 -->\n");
      out.write("\t\t<input type=\"hidden\" id=\"boardUsername\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("\t\t<!-- 게시판 주인 아이디 -->\n");
      out.write("\t\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write(" \n");
      out.write("\t \n");
      out.write("\t// 처리 도중 서버에 Request를 보내는 함수가 있다면 늦게 처리돼서 \n");
      out.write("\t// 이 부분을 가장 먼저 수행(403 Forbidden 방지) \n");
      out.write("\t$(function () {\n");
      out.write("\t\tvar token = $(\"meta[name='_csrf']\").attr(\"content\");\n");
      out.write("\t\tvar header = $(\"meta[name='_csrf_header']\").attr(\"content\");\n");
      out.write("\t\t$(document).ajaxSend(function(e, xhr, options) {\n");
      out.write("\t\t\txhr.setRequestHeader(header, token);\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tvar loadingImage;\n");
      out.write("\tloadingImage = \"<img id='loadingImage' src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resource/imageIcon/replyloading.gif'>\";\n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\t\n");
      out.write("\tvar boardno = $(\"#boardno\").val(); //게시판번호\n");
      out.write("\tvar username = $(\"#username\").val();//username \n");
      out.write("\n");
      out.write("\n");
      out.write("\t$(\".replyTextArea\").on('keydown keyup', function () {\n");
      out.write(" \t\tadjustHeight();\n");
      out.write("\t});\n");
      out.write("\tvar adjustHeight = function() {\n");
      out.write("\t\t  var textEle = $(\".replyTextArea\")\n");
      out.write("\t\t  var textEleHeight = $(\".replyTextArea\").prop('scrollHeight');\n");
      out.write("\t\t  textEle.css('height', textEleHeight);\n");
      out.write("\t\t};\n");
      out.write("\tvar contentText =$(\"#contentVal\").val().replace(/<s>/g,\" \").replace(/<e>/g,\"\\n\");\n");
      out.write("\t$(\"#content\").text(contentText);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t$(\"#modify\").click(function(event) {\n");
      out.write("\t\tevent.preventDefault(); //화면 링크 방지 \n");
      out.write("\t\t$(\"form\").attr(\"action\",\"/board/modify\");\n");
      out.write("\t\t$(\"form\").submit();\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#delete\").click(function(event) {\n");
      out.write("\t\tevent.preventDefault(); //화면 링크 방지 \n");
      out.write("\t\t$(\"form\").attr(\"action\",\"/board/delete\");\n");
      out.write("\t\t$(\"form\").submit();\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#heartClick\").click(function(event){\n");
      out.write("\t\tevent.preventDefault(); //화면 링크 방지 \n");
      out.write("\t\tif(username){\n");
      out.write("\t\t$('#heartClick').css(\"display\",\"none\"); \n");
      out.write("\t    $('#heartCancle').css(\"display\",\"block\"); \n");
      out.write("\t    var heartCnt = $(\"#heartCnt\").text();\n");
      out.write("\t\theartCnt = parseInt(heartCnt)+1;\n");
      out.write("\t\t$(\"#heartCnt\").text(heartCnt);\n");
      out.write("\t\t\n");
      out.write("\t    $.ajax({\n");
      out.write("            url : \"/board/heartClick\",\n");
      out.write("            type : \"post\",\n");
      out.write("            data : {\n");
      out.write("              \tboardno : boardno,\n");
      out.write("              \tusername : username\n");
      out.write("            },\n");
      out.write("            dataType : \"text\",\n");
      out.write("            success : function(result) {\n");
      out.write("         \t\tif(result===\"success\"){\n");
      out.write("\t\t\t\t\tconsole.log(\"success\");\n");
      out.write("         \t\t}else{\n");
      out.write("         \t\t\tconsole.log(\"Fail\");\n");
      out.write("         \t\t}\n");
      out.write("            }\n");
      out.write("         });\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\talert(\"로그인 해주세요\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t$(\"#heartCancle\").click(function(event){\n");
      out.write("\t\tevent.preventDefault(); //화면 링크 방지 \n");
      out.write("\t\t$('#heartClick').css(\"display\",\"block\"); \n");
      out.write("\t    $('#heartCancle').css(\"display\",\"none\"); \n");
      out.write("\t    var heartCnt = $(\"#heartCnt\").text();\n");
      out.write("\t\theartCnt = parseInt(heartCnt)-1;\n");
      out.write("\t\t$(\"#heartCnt\").text(heartCnt);\n");
      out.write("\t\t\n");
      out.write("\t    $.ajax({\n");
      out.write("            url : \"/board/heartCancle\",\n");
      out.write("            type : \"post\",\n");
      out.write("            data : {\n");
      out.write("              \tboardno : boardno,\n");
      out.write("              \tusername : username\n");
      out.write("            },\n");
      out.write("            dataType : \"text\",\n");
      out.write("            success : function(result) {\n");
      out.write("         \t\tif(result===\"success\"){\n");
      out.write("\t\t\t\t\tconsole.log(\"success\");\n");
      out.write("         \t\t}else{\n");
      out.write("         \t\t\tconsole.log(\"Fail\");\n");
      out.write("         \t\t}\n");
      out.write("            }\n");
      out.write("         }); \n");
      out.write("\t\t\t\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t// 1차 댓글 작성 후 request 버튼\n");
      out.write("\t$(\"#replySend\").click(function(event) {\n");
      out.write("\t\tif(username){\n");
      out.write("\t\t\tvar content = $(\"#replyInput\").val();\n");
      out.write("\t\t\tsendReply(content, 0);} \n");
      out.write("\t\telse alert('로그인 후 댓글 달것');\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tloadReplies();\n");
      out.write("\t\n");
      out.write("\tif(username){\n");
      out.write("\t\tconsole.log(username);\n");
      out.write("\t\t//로그인 회원이 좋아요 체크했는지 \n");
      out.write("\t\theartCheck(username,boardno);\n");
      out.write("\t}else{\n");
      out.write("\t\tconsole.log(\"가입 없음\");\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@밑에서부터 예찬 소스 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n");
      out.write("\t\n");
      out.write("\t// 처음 게시물 열 때 댓글 로드\n");
      out.write("\tfunction loadReplies(){\n");
      out.write("\t\t\n");
      out.write("\t\t// 댓글 전체 프레임 지움 후 생성하여 붙임\n");
      out.write("\t\t$('#repliesArea').remove();\n");
      out.write("\t\tvar repliesArea = \"<div id='repliesArea'> </div>\";\n");
      out.write("\t\t$('#replyAttacher').append(repliesArea);\n");
      out.write("\t    $('#replyAttacher').append(loadingImage);\n");
      out.write("\t\t\n");
      out.write("\t\t// 댓글 요청\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\ttype : 'GET',\n");
      out.write("\t\t\turl : '/rest/reply/' + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.boardno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("\t\t\tdataType : 'json',\n");
      out.write("\t\t\tdata : {\"boardHolder\" : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'},\n");
      out.write("\t\t\tsuccess : function(response, httpstatus) {\n");
      out.write("\t\t\t\t// 게시물에 댓글이 아예 없는 경우\n");
      out.write("\t\t\t\tif(httpstatus == 'nocontent'){ \n");
      out.write("\t\t\t\t\t// 로딩 이미지 삭제\n");
      out.write("\t\t\t\t\t$('#loadingImage').remove();\n");
      out.write("\t\t\t\t\treturn 0;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//해당 댓글에 볼 수 있는 댓글들\n");
      out.write("\t\t\t\tfor(var i in response.replies) {\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 1차 댓글의 번호, 댓글쓴이, 내용 \n");
      out.write("\t\t\t\t\tvar parentReplyno = response.replies[i].parentReply.replyno;\n");
      out.write("\t\t\t\t\tvar parentUsername = response.replies[i].parentReply.username;\n");
      out.write("\t\t\t\t\tvar parentContent = response.replies[i].parentReply.content;\n");
      out.write("\n");
      out.write("\t\t\t\t\t// 1차 댓글 프레임\n");
      out.write("\t\t\t\t\tvar newParentReply =\"<div id='reply\" + parentReplyno + \"'>\"+\n");
      out.write("\t\t\t\t\t\t\t\t    \t\"<span id='username'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t   \t\t\"<span id='content'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t  \t \t\"<span id='reReplyBtn'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t  \t \t\"<div id='reReplyArea'></div>\"+\n");
      out.write("\t\t\t\t\t\t\t\t   \t\t\"</div>\";\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 1차 댓글영역에 댓글 프레임을 달고\n");
      out.write("\t\t\t\t\t$('#repliesArea').append(newParentReply);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 댓글 영역 -> 1차 댓글 프레임 -> 댓글쓴이,내용, 댓글달기 버튼 innerHTML 표시 및 이벤트 설정\n");
      out.write("\t\t\t\t\t$('#reply'+ parentReplyno).children('#username').append(parentUsername);\n");
      out.write("\t\t\t\t\t$('#reply'+ parentReplyno).children('#content').append(parentContent);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 1차 댓글의 버튼이 없는 경우\n");
      out.write("\t\t\t\t\t// 1. 자식댓글이 있는 경우 이거나\n");
      out.write("\t\t\t\t\t// 2. 자식댓글이 없더라도 1차 댓글을 내가 쓴 경우\n");
      out.write("\t\t\t\t\tif( (response.replies[i].childReplies.length == 0) && ('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.userPrincipal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != parentUsername) ){\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t// '댓글달기' 버튼 생성\n");
      out.write("\t\t\t\t\t\tvar reReplyBtn = document.createElement(\"input\");\n");
      out.write("\t\t\t\t\t\treReplyBtn.type=\"button\";\n");
      out.write("\t\t\t\t\t\treReplyBtn.value=\"댓글달기\";\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$('#reply'+ parentReplyno).children('#reReplyBtn').append(reReplyBtn);\n");
      out.write("\t\t\t\t\t\t// 1차 댓글의 createReply()인자는 자기 자신의 번호 -> 자식 댓글의 부모로 설정될 것\n");
      out.write("\t\t\t\t\t\t$('#reply'+ parentReplyno).children('#reReplyBtn').click(function (){\n");
      out.write("\t\t\t\t\t\t\talert('부모 버튼');\n");
      out.write("\t\t\t\t\t\t\tcreateReply(parentReplyno);\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 만약 2차 댓글이 있으면\n");
      out.write("\t\t\t\t\tif(response.replies[i].childReplies.length != 0){\n");
      out.write("\t\t\t\t\t\t// 모든 i번째 1차 댓글에 대한 2차 댓글 j개를 돌면서\n");
      out.write("\t\t\t\t\t\tfor(var j in response.replies[i].childReplies) {\n");
      out.write("\t\t\t\t\t\t\t// 2차 댓글의 번호, 댓글쓴이, 내용, 부모의 번호 저장\n");
      out.write("\t\t\t\t\t\t\tvar childReplyno = response.replies[i].childReplies[j].replyno;\n");
      out.write("\t\t\t\t\t\t\tvar childUsername = response.replies[i].childReplies[j].username;\n");
      out.write("\t\t\t\t\t\t\tvar childContent = response.replies[i].childReplies[j].content;\n");
      out.write("\t\t\t\t\t\t\t// 2차 댓글 프레임\n");
      out.write("\t\t\t\t\t\t\tvar newChildReply = \"<div id='reply\" + childReplyno + \"'>\"+\n");
      out.write("\t\t\t\t\t\t\t\t\t\t    \t\"<span id='username'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t\t\t   \t\t\"<span id='content'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \t \t\"<span id='reReplyBtn'></span>\"+\n");
      out.write("\t\t\t\t\t\t\t\t\t\t   \t\t\"</div>\";\n");
      out.write("\t\t\t\t\t\t\t\t\t\t   \t\t\n");
      out.write("\t\t\t\t\t\t\t// 댓글 영역 -> 1차 댓글 프레임 -> 2차 댓글 영역 -> 2차 댓글 프레임 달기\n");
      out.write("\t\t\t\t\t\t    $('#reply'+ parentReplyno).children('#reReplyArea').append(newChildReply);\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t// 댓글 영역 -> 1차 댓글 프레임 -> 2차 댓글 영역 -> 2차 댓글 프레임 -> 댓글쓴이,내용, 댓글달기 버튼 innerHTML 표시 및 이벤트 설정\n");
      out.write("\t\t\t\t\t\t    $('#reply'+ childReplyno).children('#username').append(childUsername);\n");
      out.write("\t\t\t\t\t\t    $('#reply'+ childReplyno).children('#content').append(childContent);\n");
      out.write("\t\t\t\t\t\t   \n");
      out.write("\t\t\t\t\t\t    // 2차 댓글 버튼이 없는 경우\n");
      out.write("\t\t\t\t\t\t    // 1. 2차 댓글이 2개 이상일 때 마지막꺼 빼고 전부다\n");
      out.write("\t\t\t\t\t\t    // 2. 마지막으로 내가 댓글을 단 경우(1개 달렸을 떄도 고려)\n");
      out.write("\t\t\t\t\t\t    \n");
      out.write("\t\t\t\t\t\t    //마지막 댓글의 경우\n");
      out.write("\t\t\t\t\t\t    if( j == (response.replies[i].childReplies.length-1) ){\n");
      out.write("\t\t\t\t\t    \t\tif(response.replies[i].childReplies[j].username != '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.userPrincipal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){\n");
      out.write("\t\t\t\t\t\t\t\t\t// '댓글달기' 버튼 생성\n");
      out.write("\t\t\t\t\t\t\t\t\tvar reReplyBtn = document.createElement(\"input\");\n");
      out.write("\t\t\t\t\t\t\t\t\treReplyBtn.type=\"button\";\n");
      out.write("\t\t\t\t\t\t\t\t\treReplyBtn.value=\"댓글달기\";\n");
      out.write("\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#reply'+ childReplyno).children('#reReplyBtn').append(reReplyBtn);\n");
      out.write("\t\t\t\t\t\t\t   \n");
      out.write("\t\t\t\t\t\t\t   \t\t// 2차 댓글의 createReply()인자는 자신과 관계된 1차 댓글의 번호와 자기 자신의 번호\n");
      out.write("\t\t\t\t\t\t\t   \t\t$('#reply'+ childReplyno).children('#reReplyBtn').click(function (){\n");
      out.write("\t\t\t\t\t\t\t\t    \talert('자식 버튼');\n");
      out.write("\t\t\t\t\t\t\t\t    \tcreateReply(parentReplyno);\n");
      out.write("\t\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t    \t\t}\n");
      out.write("\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t  }\n");
      out.write("\t\t\t\t\t\t} // 2차 댓글 등록 종료\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t} // 모든 댓글 등록 종료\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t// 이 게시물에서의 비밀댓글 갯수(1차만 표현)\n");
      out.write("\t\t\t\tvar secretReplyCount = response.secretReplyCount;\n");
      out.write("\t\t\t\tfor(var i=0; i<secretReplyCount; i++)\n");
      out.write("\t\t\t\t\t$('#repliesArea').append(\"<div style='color:#ff0000'>비밀댓글입니다</div>\");\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// 로딩 이미지 삭제\n");
      out.write("\t\t\t\t$('#loadingImage').remove();\n");
      out.write("\t\t\t}, // success\n");
      out.write("\t\t\terror : function(response) { // 실패시\n");
      out.write("\t\t\t\t// 로딩 이미지 삭제\n");
      out.write("\t\t\t\t$('#loadingImage').remove();\n");
      out.write("\t\t\t\talert(\"reply load Failed! \" + response.status);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}; // loadReplies()\n");
      out.write("\t\n");
      out.write("\t// 2차 댓글 입력창 만드는 함수\n");
      out.write("\t// 1차 댓글 답글 -> 1차 댓글 번호가 인자\n");
      out.write("    // 2차 댓글 답글 -> 2차 댓글과 연관된 1차 댓글의 번호가 인자\n");
      out.write("    // 즉, 이 댓글이 만들어 질 때 무조건 parentno로 설정될 번호가 넘어온다.\n");
      out.write("\tfunction createReply(parentReplyno){\n");
      out.write("\t\t// 2차 댓글 입력 프레임 생성\n");
      out.write("\t\tvar childReplyInput = \"<div id='inputReply'>\"\n");
      out.write("\t\t+ \"<input id=newReplyText type='text'/>\"\n");
      out.write("\t\t+ \"<input id=newReplySubmit type='button' value='2차달기'/>\"\n");
      out.write("\t\t+ \"</div>\";\n");
      out.write("\t\t\n");
      out.write("\t\t$('#repliesArea').find('#inputReply').remove();\n");
      out.write("\t\t// 2차 댓글 입력 프레임 1차 댓글 맨 아래(2차 댓글 여러개 있으면 그 중 맨 아래)에 삽입\n");
      out.write("\t\t$('#reply'+parentReplyno).children('#reReplyArea').append(childReplyInput);\n");
      out.write("\t\t\n");
      out.write("\t\t// 2차 댓글 입력 프레임에서 버튼 가져옴\n");
      out.write("\t\tvar sendBtn = $('#reply'+parentReplyno).children('#reReplyArea').children('#inputReply').children('#newReplySubmit');\n");
      out.write("\t\t\n");
      out.write("\t\t// 버튼에 리스너 설정\n");
      out.write("\t\tsendBtn.click(function(){\n");
      out.write("\t\t\tvar content = $('#reply'+parentReplyno).children('#reReplyArea').children('#inputReply').children('#newReplyText').val();\n");
      out.write("\t\t\tsendReply(content, parentReplyno);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t}; // createReply()\n");
      out.write("\n");
      out.write("\n");
      out.write("\t// 댓글 등록 요청  (댓글내용, 루트 댓글 번호(1차 댓글은 0))\n");
      out.write("\tfunction sendReply(content, parentReplyno){\n");
      out.write("\t\t\tvar datas = {\n");
      out.write("\t\t\t\t\t\t\t\"reply\" : {\t\n");
      out.write("\t\t\t\t\t\t\t\t\"boardno\" : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.boardno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("\t\t\t\t\t\t\t\t\"username\" : username,\n");
      out.write("\t\t\t\t\t\t\t\t\"content\" : content\n");
      out.write("\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\"parentno\" : parentReplyno\n");
      out.write("\t\t\t\t\t\t};\n");
      out.write("\t\t\tvar jsonData = JSON.stringify(datas);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\tmethod : 'POST',\n");
      out.write("\t\t\t\turl : '/rest/reply/' + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.boardno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("\t\t\t\tdata : jsonData,\n");
      out.write("\t\t\t\tcontentType: \"application/json\",\n");
      out.write("\t\t\t\tsuccess : function(response){\n");
      out.write("\t\t\t\t\tloadReplies();\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(response){\n");
      out.write("\t\t\t\t\tif(response.status == \"409\") // CONFLICT\n");
      out.write("\t\t\t\t\t\talert('이미 댓글을 달아서 안된다');\n");
      out.write("\t\t\t\t\telse if(response.status == \"400\") // BAD_REQUEST\n");
      out.write("\t\t\t\t\t\talert('로그인해라');\n");
      out.write("\t\t\t\t\telse alert(\"sendReply실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t};    \n");
      out.write("});\n");
      out.write("\t//회원 좋아요 체크상태 확인\n");
      out.write("\tfunction heartCheck(username,boardno) {\n");
      out.write("\t $.ajax({\n");
      out.write("        url : \"/board/heartCheck\",\n");
      out.write("        type : 'get',\n");
      out.write("        data : {\n");
      out.write("          \tboardno : boardno,\n");
      out.write("          \tusername : username\n");
      out.write("        },\n");
      out.write("        dataType : \"text\",\n");
      out.write("        success : function(result) {\n");
      out.write("     \t\tif(result===\"check\"){\n");
      out.write("     \t\t\t$('#heartClick').css(\"display\",\"none\"); \n");
      out.write("      \t\t    $('#heartCancle').css(\"display\",\"block\"); \n");
      out.write("     \t\t}else{\n");
      out.write("     \t\t\tconsole.log(\"NoCheck\");\n");
      out.write("     \t\t}\n");
      out.write("        }\n");
      out.write("     });\t\n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("}\t \n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/read.jsp(163,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardVO.username eq pageContext.request.userPrincipal.name}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t<a href=\"#\" id=\"modify\">수정</a>\n");
          out.write("\t\t\t\t\t\t<a href=\"#\" id=\"delete\">삭제</a>\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
